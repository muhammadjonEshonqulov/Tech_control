import 'package:easy_localization/easy_localization.dart';import 'package:flutter/material.dart';import 'package:flutter_easyloading/flutter_easyloading.dart';import 'package:provider/provider.dart';import 'package:tech_control/app/router.dart';import 'package:tech_control/data/database/cache.dart';import 'package:tech_control/provider/login_provider.dart';import 'package:tech_control/utils/network_result.dart';import '../app/app.dart';import '../utils/utils.dart';class LoginScreen extends StatefulWidget {  const LoginScreen({super.key});  @override  State<LoginScreen> createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  final TextEditingController _loginController = TextEditingController();  final TextEditingController _passwordController = TextEditingController();  final bool _isObscure = true;  late LoginProvider provider;  final _formKey = GlobalKey<FormState>();  @override  void initState() {    provider = context.read<LoginProvider>();    super.initState();  }  @override  Widget build(BuildContext context) {    return SafeArea(      child: Scaffold(          backgroundColor: Colors.white,          body: Consumer<LoginProvider>(builder: (context, value, child) {            if (value.loginState is Loading) {              kprint("Loading TECH ${value.loginState?.message.toString()}");              Future.delayed(Duration.zero, () {                showLoading(context);              });            } else if (value.loginState is Error) {              hideLoading();              // snack(context, value.loginState?.message ?? '');              EasyLoading.showToast(value.loginState?.message ?? '', toastPosition: EasyLoadingToastPosition.top);              kprint("Error TECH ${value.loginState?.message.toString()}");            } else if (value.loginState is Success) {              Future.delayed(Duration.zero, () async {                hideLoading();               await cache.setString(cache.token, value.loginState?.data['token'] ?? '');                router.go(Routes.qr_scan);              });            }            return SingleChildScrollView(                child: Form(              key: _formKey,              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Stack(alignment: Alignment.center, children: [                    Image.asset("assets/images/ic_login.png"),                    Column(children: [                      Text(                        "app_name".tr(),                        style: const TextStyle(color: Colors.white, fontSize: 40, fontFamily: 'Montserrat', fontWeight: FontWeight.w800),                      ),                      const Padding(                        padding: EdgeInsets.all(8.0),                        child: Center(                            child: Text(                          "Mirzo Ulug‘bek nomidagi  O‘zbekiston Milliy universiteti Jizzax filiali Raqamli ta’lim texnologiyalari markazi",                          textAlign: TextAlign.center,                          style: TextStyle(color: Colors.white, fontSize: 11, fontFamily: 'Montserrat', fontWeight: FontWeight.w800),                        )),                      ),                    ])                  ]),                  SizedBox(                    height: 60,                  ),                  Padding(                    padding: const EdgeInsets.only(left: 15.0, right: 15.0),                    child: Column(                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        Text(                          "Login *",                          textAlign: TextAlign.left,                          style: TextStyle(color: Colors.black, fontSize: 18, fontFamily: 'Montserrat', fontWeight: FontWeight.w400),                        ),                        SizedBox(                          height: 10,                        ),                        TextFormField(                          controller: _loginController,                          decoration: InputDecoration(                            border: const OutlineInputBorder(borderSide: BorderSide(color: Color(0xFFE7ECF3))),                            labelText: "Login",                          ),                          validator: (value) {                            return validateNonEmpty(value, "Login kiritilmadi");                          },                        ),                        SizedBox(                          height: 20,                        ),                        Text(                          "Parol *",                          textAlign: TextAlign.left,                          style: TextStyle(color: Colors.black, fontSize: 18, fontFamily: 'Montserrat', fontWeight: FontWeight.w400),                        ),                        SizedBox(                          height: 10,                        ),                        TextFormField(                          controller: _passwordController,                          obscureText: _isObscure,                          decoration: InputDecoration(                            border: const OutlineInputBorder(),                            labelText: "Parol",                          ),                          validator: (value) {                            return validateNonEmpty(value, "Parol kiritilmadi");                          },                        ),                        SizedBox(                          height: 20,                        ),                        Text(                          "Parolni unutdingizmi?",                          textAlign: TextAlign.left,                          style: TextStyle(color: Colors.black, fontSize: 15, fontFamily: 'Montserrat', fontWeight: FontWeight.w400),                        ),                        SizedBox(                          height: 20,                        ),                        Center(                            child: Container(                          width: double.infinity,                          height: 40,                          margin: const EdgeInsets.only(left: 35.0, right: 55.0),                          child: ElevatedButton(                              style: ButtonStyle(                                backgroundColor: MaterialStateProperty.all(const Color(0xff3E67B7)),                              ),                              onPressed: () async {                                if (_formKey.currentState!.validate()) provider.login(_loginController.text, _passwordController.text);                              },                              child: Text("Tizimga kirish")),                        ))                      ],                    ),                  )                ],              ),            ));          })),    );  }  String? validateNonEmpty(String? value, String errorMessage) {    if (value == null || value.isEmpty) {      return errorMessage;    }    return null;  }}